apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: qliksenses.qlik.com
spec:
  group: qlik.com
  names:
    kind: Qliksense
    listKind: QliksenseList
    plural: qliksenses
    shortNames:
    - qs
    singular: qliksense
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: Qliksense is the Schema for the qliksenses API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: CRSpec defines the configuration for the whole manifests It
            is expecting in the manifestsRoot folder two subfolders .operator and
            .configuration exist operator will add patch into .operator folder customer
            will add patch into .configuration folder
          properties:
            configs:
              additionalProperties:
                description: operator-sdk needs named type
                items:
                  properties:
                    name:
                      type: string
                    value:
                      type: string
                    valueFrom:
                      properties:
                        secretKeyRef:
                          properties:
                            key:
                              type: string
                            name:
                              type: string
                          type: object
                      required:
                      - secretKeyRef
                      type: object
                  type: object
                type: array
              type: object
            git:
              properties:
                accessToken:
                  type: string
                password:
                  type: string
                repository:
                  type: string
                secretName:
                  type: string
                userName:
                  type: string
              type: object
            manifestsRoot:
              type: string
            opsRunner:
              properties:
                enabled:
                  type: string
                image:
                  type: string
                schedule:
                  type: string
                watchBranch:
                  type: string
              type: object
            profile:
              description: relative to manifestsRoot folder, ex. ./manifests/base
              type: string
            secrets:
              additionalProperties:
                description: operator-sdk needs named type
                items:
                  properties:
                    name:
                      type: string
                    value:
                      type: string
                    valueFrom:
                      properties:
                        secretKeyRef:
                          properties:
                            key:
                              type: string
                            name:
                              type: string
                          type: object
                      required:
                      - secretKeyRef
                      type: object
                  type: object
                type: array
              type: object
            storageClassName:
              type: string
            tlsCertHost:
              type: string
            tlsCertOrg:
              type: string
          required:
          - profile
          type: object
        status:
          description: QliksenseStatus defines the observed state of Qliksense
          properties:
            conditions:
              additionalProperties:
                description: "Condition represents an observation of an object's state.
                  Conditions are an extension mechanism intended to be used when the
                  details of an observation are not a priori known or would not apply
                  to all instances of a given Kind. \n Conditions should be added
                  to explicitly convey properties that users and components care about
                  rather than requiring those properties to be inferred from other
                  observations. Once defined, the meaning of a Condition can not be
                  changed arbitrarily - it becomes part of the API, and has the same
                  backwards- and forwards-compatibility concerns of any other part
                  of the API."
                properties:
                  lastTransitionTime:
                    format: date-time
                    type: string
                  message:
                    type: string
                  reason:
                    description: ConditionReason is intended to be a one-word, CamelCase
                      representation of the category of cause of the current status.
                      It is intended to be used in concise output, such as one-line
                      kubectl get output, and in summarizing occurrences of causes.
                    type: string
                  status:
                    type: string
                  type:
                    description: "ConditionType is the type of the condition and is
                      typically a CamelCased word or short phrase. \n Condition types
                      should indicate state in the \"abnormal-true\" polarity. For
                      example, if the condition indicates when a policy is invalid,
                      the \"is valid\" case is probably the norm, so the condition
                      should be called \"Invalid\"."
                    type: string
                required:
                - status
                - type
                type: object
              description: 'INSERT ADDITIONAL STATUS FIELD - define observed state
                of cluster Important: Run "operator-sdk generate k8s" to regenerate
                code after modifying this file Add custom validation using kubebuilder
                tags: https://book-v1.book.kubebuilder.io/beyond_basics/generating_crd.html'
              type: array
          required:
          - conditions
          type: object
      type: object
  version: v1
  versions:
  - name: v1
    served: true
    storage: true
